using Gtk 4.0;
using Adw 1;

menu move-row-menu {
  section moveSection {
    // There are items here but due to API constraints, they must be added programmatically. Just know that there are the move-up and move-down buttons here.
  }
}

Gtk.Box enterPosition {
  orientation: vertical;
  spacing: 8;
  margin-top: 4;
  margin-bottom: 4;
  margin-start: 4;
  margin-end: 4;

  Gtk.Label {
    label: _('Position');
    xalign: 0;
  }

  Gtk.Box {
    orientation: horizontal;
    spacing: 8;

    Gtk.Entry {
      max-length: 3;
    }

    Gtk.Button {
      label: _('Move');
      valign: center;
      halign: center;
      styles ['suggested-action']
    }
  }
}

template $StvpkLaunchpadRow: Adw.ExpanderRow {
  // title: bind ((AddonlistRow.itemk) as <$AddonlistPageItem>).name as <string>;
  title-lines: 1;
  // subtitle: bind ((AddonlistRow.itemk) as <$AddonlistPageItem>).id as <string>;
  subtitle-lines: 1;
  //icon-name: "media-flash";
  styles ['launchpad-row']


  [prefix]
  Gtk.Image {
    visible: true;
    icon-name: "list-drag-handle-symbolic";
    styles ['drag-handle']
  }

  [action]
  Gtk.Box {
    spacing: 8;

    Gtk.Button install-archive {
      visible: false;
      icon-name: 'arrow2-up-symbolic';
      tooltip-text: _('Archive auto-install available');
      action-name: 'win.archive.install-archive';
      // action-target
      valign: center;
      halign: center;
      styles ['lozenge', 'blue', 'opaque']
    }

    Gtk.Button no-archive {
      visible: false;
      icon-name: 'warning-symbolic';
      tooltip-text: _('No archive installed');
      valign: center;
      halign: center;
      styles ['lozenge', 'grey', 'opaque']
    }

    Gtk.Button warning {
      visible: false;
      icon-name: 'warning-symbolic';
      tooltip-text: _('Add-on does not exist');
      valign: center;
      halign: center;
      styles ['lozenge', 'grey', 'opaque']
    }

    Gtk.Switch toggle {
      valign: center;
      halign: center;
      // active: bind ((AddonlistRow.itemk) as <$AddonlistPageItem>).enabled as <string>;
      action-name: 'win.addons.active';
      action-target: '(\"addon id\", false)';
      // action-target is set in code
    }

    Gtk.MenuButton {
      visible: false;
      valign: center;
      popover:
        Gtk.PopoverMenu popoverMenu {
          menu-model: move-row-menu;
        };
      icon-name: "view-more-symbolic";
      tooltip-text: "Options";

      styles ["flat"]
    }

    Gtk.Button remove-small {
      icon-name: 'cross-filled-symbolic';
      action-name: 'win.addons.remove';
      valign: center;
      styles ['flat']
    }
  }

  Gtk.ListBoxRow { // by default the expansion menu is activatable no matter the row?? A workaround is to use listboxrow and disable activatable there.
    activatable: false;

    Gtk.Grid {
      styles ["row-content"]

      row-spacing: 15;
      column-spacing: 15;

      Gtk.Label {
        styles ["dim-label"]
        label: _("Title");

        xalign: 0;
        yalign: 0;
        layout {
          row: 0;
          column: 0;
        }
      }

      Gtk.Label title_field {
        // label: bind ((AddonlistRow.itemk) as <$AddonlistPageItem>).last_update as <string>;
        wrap: true;
        wrap-mode: word;
        selectable: true;

        xalign: 0;
        layout {
          row: 0;
          column: 1;
        }
      }

      Gtk.Label {
        styles ["dim-label"]
        label: _("Description");

        xalign: 0;
        yalign: 0;
        layout {
          row: 1;
          column: 0;
        }
      }

      Gtk.ScrolledWindow {
        hexpand: true;
        vexpand: true;
        min-content-height: 200;
        max-content-height: 600;

        layout {
          row: 1;
          column: 1;
        }

        Gtk.Label description_field {
          styles ["multiline"]
          // label: bind ((AddonlistRow.itemk) as <$AddonlistPageItem>).description as <string>;
          use-markup: true;
          wrap: true;
          wrap-mode: word;
          selectable: true;
          halign: start;
          valign: start;
          margin-start: 4;
          margin-end: 4;
        }
      }

      Gtk.Label {
        styles ["dim-label"]
        label: _("Last Updated");

        xalign: 0;
        yalign: 0;
        layout {
          row: 2;
          column: 0;
        }
      }

      Gtk.Label last_update_field {
        // label: bind ((AddonlistRow.itemk) as <$AddonlistPageItem>).last_update as <string>;
        wrap: true;
        wrap-mode: word;
        selectable: true;

        xalign: 0;
        layout {
          row: 2;
          column: 1;
        }
      }

    }
  }

  Gtk.ListBoxRow {

    Gtk.Box {
      halign: end;
      spacing: 8;
      margin-top: 8;
      margin-bottom: 8;
      margin-start: 8;
      margin-end: 8;

      Gtk.Button seeDetails {
        label: _('See Details');
        styles ['flat']
        action-name: 'win.addon-details.see-details';
        // action-target set in app code
      }

      Gtk.Button removeAddon {
        halign: end;
        label: _('Remove');
        styles ['destructive-action']
        action-name: 'win.addons.remove';
        // action-target set in app code
      }
    }
  }
}
